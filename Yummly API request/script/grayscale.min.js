

// Create a new list item when clicking on the "Add" button
// Adds new list item to array
function newElement() {
    var li = document.createElement("li");
    li.setAttribute("class", "ingredientLi");
    var inputValue = document.getElementById("myInput").value;

    var t = document.createTextNode(inputValue);
    li.appendChild(t);
    if (inputValue.length < 1) {
        alert("You must write something!");
    } else {
        document.getElementById("ingredientsUL").appendChild(li);
        ingredientArray[ingredientCount] = inputValue;
        alert(ingredientArray[ingredientCount]);
        ingredientCount++

    }
    document.getElementById("myInput").value = "";
    var span = document.createElement("SPAN");
    var txt = document.createTextNode("\u00D7");
    span.className = "close";

    span.setAttribute("id", closeTracker);
    closeTracker++;
    span.appendChild(txt);
    li.appendChild(span);

    for (i = 0; i < close.length; i++) {
        close[i].onclick = function() {
            var div = this.parentElement;
            var id = ($(this).attr('id'));
            div.style.display = "none";
            removeFruit(id);


        }
    }
}

// Create a "close" button and append it to each list item
var myNodelist = document.getElementsByTagName("li");
var i;
for (i = 0; i < myNodelist.length; i++) {
    var span = document.createElement("SPAN");
    var txt = document.createTextNode("\u00D7");
    span.className = "close";
    span.appendChild(txt);

    myNodelist[i].appendChild(span);
}

// Click on a close button to hide the current list item
var close = document.getElementsByClassName("close");
var i;
for (i = 0; i < close.length; i++) {
    var c = close[i];
    close[i].onclick = function(c) {
        var div = this.parentElement;
        div.style.display = "none";
        var id = ($(this).attr('id'));
        removeFruit(id);




    }
}






// Remove ingredient from array and turns spot into undefined
function removeFruit(ingredientId) {
    //alert(ingredientId);
    var index = (ingredientId);
    ingredientArray[index] = null;
}


// Removes undefined and null objects from Array. 
// Function is used before sending to node.
function filter_array(test_array) {
    var temp = [];
    var spotCounter = 0;
    var i;
    for (i = 0; i < test_array.length; i++) {
        if (test_array[i] != undefined) {
            temp[spotCounter] = test_array[i];
            spotCounter++;

        }


    }

    //console.log("temp= " + temp);
    return temp;
}







// <--------------------------------------------------------------------------------->
// All for UI ----------------------------------------------------------------------->




// // Initiation of the page PLEASE IGNORE DO NOT EDIT THIS
// function init() {
// var e = {
// zoom: 15,
// center: new google.maps.LatLng(40.67, -73.94),
// disableDefaultUI: !0,
// scrollwheel: !1,
// draggable: !1,
// styles: [{
// featureType: "water",
// elementType: "geometry",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 17
// }]
// }, {
// featureType: "landscape",
// elementType: "geometry",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 20
// }]
// }, {
// featureType: "road.highway",
// elementType: "geometry.fill",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 17
// }]
// }, {
// featureType: "road.highway",
// elementType: "geometry.stroke",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 29
// }, {
// weight: .2
// }]
// }, {
// featureType: "road.arterial",
// elementType: "geometry",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 18
// }]
// }, {
// featureType: "road.local",
// elementType: "geometry",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 16
// }]
// }, {
// featureType: "poi",
// elementType: "geometry",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 21
// }]
// }, {
// elementType: "labels.text.stroke",
// stylers: [{
// visibility: "on"
// }, {
// color: "#000000"
// }, {
// lightness: 16
// }]
// }, {
// elementType: "labels.text.fill",
// stylers: [{
// saturation: 36
// }, {
// color: "#000000"
// }, {
// lightness: 40
// }]
// }, {
// elementType: "labels.icon",
// stylers: [{
// visibility: "off"
// }]
// }, {
// featureType: "transit",
// elementType: "geometry",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 19
// }]
// }, {
// featureType: "administrative",
// elementType: "geometry.fill",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 20
// }]
// }, {
// featureType: "administrative",
// elementType: "geometry.stroke",
// stylers: [{
// color: "#000000"
// }, {
// lightness: 17
// }, {
// weight: 1.2
// }]
// }]
// },
// t = document.getElementById("map");
// map = new google.maps.Map(t, e);
// var l = new google.maps.LatLng(40.67, -73.94);
// new google.maps.Marker({
// position: l,
// map: map,
// icon: "img/map-marker.svg"
// })
// }! function(e) {
// "use strict";
// e('a.js-scroll-trigger[href*="#"]:not([href="#"])').click(function() {
// if (location.pathname.replace(/^\//, "") == this.pathname.replace(/^\//, "") && location.hostname == this.hostname) {
// var t = e(this.hash);
// if ((t = t.length ? t : e("[name=" + this.hash.slice(1) + "]")).length) return e("html, body").animate({
// scrollTop: t.offset().top - 48
// }, 1e3, "easeInOutExpo"), !1
// }
// }), e(".js-scroll-trigger").click(function() {
// e(".navbar-collapse").collapse("hide")
// }), e("body").scrollspy({
// target: "#mainNav",
// offset: 54
// });
// var t = function() {
// e("#mainNav").offset().top > 100 ? e("#mainNav").addClass("navbar-shrink") : e("#mainNav").removeClass("navbar-shrink")
// };
// t(), e(window).scroll(t)
// }(jQuery);
// var map = null;
// google.maps.event.addDomListener(window, "load", init), google.maps.event.addDomListener(window, "resize", function() {
// map.setCenter(new google.maps.LatLng(40.67, -73.94))
// });